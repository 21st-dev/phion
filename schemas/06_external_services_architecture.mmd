sequenceDiagram
    participant WS as üîÑ WebSocket Server
    participant GITHUB_APP as ü§ñ GitHub App
    participant GITHUB_API as üêô GitHub API
    participant REPO as üì¶ GitHub Repository
    participant NETLIFY_API as üöÄ Netlify API
    participant NETLIFY_SITE as üåê Netlify Site
    participant BUILD as üèóÔ∏è Build Process
    participant CDN as üåç CDN/Edge

    Note over WS,CDN: üîó EXTERNAL SERVICES - –î–ï–¢–ê–õ–¨–ù–ê–Ø –ê–†–•–ò–¢–ï–ö–¢–£–†–ê

    %% === GITHUB APP –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø ===
    rect rgb(250, 245, 255)
        Note over GITHUB_APP: ü§ñ GITHUB APP –ê–†–•–ò–¢–ï–ö–¢–£–†–ê
        
        Note left of GITHUB_APP: –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø GITHUB APP
        Note left of GITHUB_APP: ‚îú‚îÄ‚îÄ App Name: "Vybcel Bot"
        Note left of GITHUB_APP: ‚îú‚îÄ‚îÄ App ID: 1390062
        Note left of GITHUB_APP: ‚îú‚îÄ‚îÄ Installation ID: 70719351
        Note left of GITHUB_APP: ‚îú‚îÄ‚îÄ Organization: vybcel
        Note left of GITHUB_APP: ‚îú‚îÄ‚îÄ Private Key (PEM format)
        Note left of GITHUB_APP: ‚îî‚îÄ‚îÄ Webhook URL (–¥–ª—è —Å–æ–±—ã—Ç–∏–π)

        Note right of GITHUB_APP: PERMISSIONS –ò SCOPE
        Note right of GITHUB_APP: ‚îú‚îÄ‚îÄ Repository permissions:
        Note right of GITHUB_APP: ‚îÇ   ‚îú‚îÄ‚îÄ Contents: Read & Write
        Note right of GITHUB_APP: ‚îÇ   ‚îú‚îÄ‚îÄ Metadata: Read
        Note right of GITHUB_APP: ‚îÇ   ‚îú‚îÄ‚îÄ Pull requests: Read & Write
        Note right of GITHUB_APP: ‚îÇ   ‚îî‚îÄ‚îÄ Administration: Write
        Note right of GITHUB_APP: ‚îú‚îÄ‚îÄ Organization permissions:
        Note right of GITHUB_APP: ‚îÇ   ‚îú‚îÄ‚îÄ Members: Read
        Note right of GITHUB_APP: ‚îÇ   ‚îî‚îÄ‚îÄ Administration: Write
        Note right of GITHUB_APP: ‚îî‚îÄ‚îÄ Account permissions:
        Note right of GITHUB_APP:     ‚îî‚îÄ‚îÄ Email addresses: Read

        Note over GITHUB_APP: JWT AUTHENTICATION FLOW
        Note over GITHUB_APP: ‚îú‚îÄ‚îÄ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è JWT —Å private key
        Note over GITHUB_APP: ‚îú‚îÄ‚îÄ –ü–æ–ª—É—á–µ–Ω–∏–µ installation token (60 –º–∏–Ω)
        Note over GITHUB_APP: ‚îú‚îÄ‚îÄ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ token –¥–ª—è API calls
        Note over GITHUB_APP: ‚îî‚îÄ‚îÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤

        alt JWT Token Generation
            WS->>GITHUB_APP: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è installation token
            GITHUB_APP->>GITHUB_APP: –°–æ–∑–¥–∞–Ω–∏–µ JWT —Å private key
            GITHUB_APP->>GITHUB_API: POST /app/installations/{id}/access_tokens
            GITHUB_API-->>GITHUB_APP: Installation token (60 –º–∏–Ω)
            GITHUB_APP-->>WS: Ready –¥–ª—è API –æ–ø–µ—Ä–∞—Ü–∏–π
        end
        
        alt Token Refresh
            GITHUB_APP->>GITHUB_APP: Token expiration check
            GITHUB_APP->>GITHUB_API: –ù–æ–≤—ã–π installation token
            GITHUB_API-->>GITHUB_APP: –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π token
            GITHUB_APP->>WS: Token refreshed
        end
    end

    %% === GITHUB REPOSITORY OPERATIONS ===
    rect rgb(240, 248, 255)
        Note over REPO: üì¶ GITHUB REPOSITORY –û–ü–ï–†–ê–¶–ò–ò
        
        Note left of REPO: –°–û–ó–î–ê–ù–ò–ï –†–ï–ü–û–ó–ò–¢–û–†–ò–Ø
        Note left of REPO: ‚îú‚îÄ‚îÄ POST /orgs/vybcel/repos
        Note left of REPO: ‚îú‚îÄ‚îÄ Private repository by default
        Note left of REPO: ‚îú‚îÄ‚îÄ Auto-initialization —Å README
        Note left of REPO: ‚îú‚îÄ‚îÄ Default branch: main
        Note left of REPO: ‚îú‚îÄ‚îÄ Repository naming: vybcel-project-{id}
        Note left of REPO: ‚îî‚îÄ‚îÄ Template files injection

        Note right of REPO: FILE OPERATIONS
        Note right of REPO: ‚îú‚îÄ‚îÄ PUT /repos/{owner}/{repo}/contents/{path}
        Note right of REPO: ‚îÇ   ‚îî‚îÄ‚îÄ Create/Update —Ñ–∞–π–ª–æ–≤
        Note right of REPO: ‚îú‚îÄ‚îÄ GET /repos/{owner}/{repo}/contents/{path}
        Note right of REPO: ‚îÇ   ‚îî‚îÄ‚îÄ Read file contents
        Note right of REPO: ‚îú‚îÄ‚îÄ DELETE /repos/{owner}/{repo}/contents/{path}
        Note right of REPO: ‚îÇ   ‚îî‚îÄ‚îÄ Delete —Ñ–∞–π–ª–æ–≤
        Note right of REPO: ‚îî‚îÄ‚îÄ Batch operations –¥–ª—è multiple files

        Note over REPO: GIT OPERATIONS
        Note over REPO: ‚îú‚îÄ‚îÄ –°–æ–∑–¥–∞–Ω–∏–µ blobs –¥–ª—è —Ñ–∞–π–ª–æ–≤
        Note over REPO: ‚îú‚îÄ‚îÄ –°–æ–∑–¥–∞–Ω–∏–µ tree —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
        Note over REPO: ‚îú‚îÄ‚îÄ –°–æ–∑–¥–∞–Ω–∏–µ commit —Å message
        Note over REPO: ‚îî‚îÄ‚îÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ main branch reference

        alt –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
            WS->>GITHUB_API: POST /orgs/vybcel/repos
            GITHUB_API->>REPO: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ —Ä–µ–ø–æ
            REPO->>REPO: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å README
            REPO->>REPO: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ default branch (main)
            REPO-->>WS: Repository URL + clone URL
        end
        
        alt Batch upload —Ñ–∞–π–ª–æ–≤
            WS->>GITHUB_API: –ü–æ–ª—É—á–µ–Ω–∏–µ parent commit SHA
            GITHUB_API-->>WS: Latest commit SHA
            
            loop –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞
                WS->>GITHUB_API: POST /repos/{owner}/{repo}/git/blobs
                GITHUB_API-->>WS: Blob SHA
            end
            
            WS->>GITHUB_API: POST /repos/{owner}/{repo}/git/trees
            GITHUB_API-->>WS: Tree SHA
            
            WS->>GITHUB_API: POST /repos/{owner}/{repo}/git/commits
            GITHUB_API-->>WS: Commit SHA
            
            WS->>GITHUB_API: PATCH /repos/{owner}/{repo}/git/refs/heads/main
            GITHUB_API-->>WS: Updated main branch
        end
        
        alt –£–¥–∞–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
            WS->>GITHUB_API: DELETE /repos/vybcel/{repo-name}
            GITHUB_API->>REPO: Repository deletion
            REPO->>REPO: –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –∏ –∏—Å—Ç–æ—Ä–∏–∏
            REPO-->>WS: Deletion confirmed
        end
    end

    %% === GITHUB WEBHOOKS ===
    rect rgb(255, 250, 240)
        Note over GITHUB_API: üîî GITHUB WEBHOOKS
        
        Note left of GITHUB_API: WEBHOOK EVENTS
        Note left of GITHUB_API: ‚îú‚îÄ‚îÄ push (commits –≤ main)
        Note left of GITHUB_API: ‚îú‚îÄ‚îÄ pull_request (PR —Å–æ–±—ã—Ç–∏—è)
        Note left of GITHUB_API: ‚îú‚îÄ‚îÄ repository (—Å–æ–∑–¥–∞–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ)
        Note left of GITHUB_API: ‚îú‚îÄ‚îÄ installation (app install/uninstall)
        Note left of GITHUB_API: ‚îî‚îÄ‚îÄ release (–Ω–æ–≤—ã–µ —Ä–µ–ª–∏–∑—ã)

        Note right of GITHUB_API: WEBHOOK PAYLOAD
        Note right of GITHUB_API: ‚îú‚îÄ‚îÄ Headers:
        Note right of GITHUB_API: ‚îÇ   ‚îú‚îÄ‚îÄ X-GitHub-Event
        Note right of GITHUB_API: ‚îÇ   ‚îú‚îÄ‚îÄ X-GitHub-Delivery
        Note right of GITHUB_API: ‚îÇ   ‚îî‚îÄ‚îÄ X-Hub-Signature-256
        Note right of GITHUB_API: ‚îú‚îÄ‚îÄ Body:
        Note right of GITHUB_API: ‚îÇ   ‚îú‚îÄ‚îÄ action (opened, closed, etc.)
        Note right of GITHUB_API: ‚îÇ   ‚îú‚îÄ‚îÄ repository (repo info)
        Note right of GITHUB_API: ‚îÇ   ‚îú‚îÄ‚îÄ sender (user info)
        Note right of GITHUB_API: ‚îÇ   ‚îî‚îÄ‚îÄ commits (–¥–ª—è push events)

        alt Push webhook
            REPO->>GITHUB_API: Git push to main branch
            GITHUB_API->>WS: POST /webhooks/github
            WS->>WS: Signature verification
            WS->>WS: –ü–∞—Ä—Å–∏–Ω–≥ payload
            WS->>WS: Trigger auto-deploy if needed
        end
        
        alt Repository webhook
            GITHUB_API->>WS: Repository created/deleted
            WS->>WS: Update internal state
            WS->>WS: Cleanup related resources
        end
    end

    %% === NETLIFY API –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø ===
    rect rgb(255, 245, 250)
        Note over NETLIFY_API: üöÄ NETLIFY API –ê–†–•–ò–¢–ï–ö–¢–£–†–ê
        
        Note left of NETLIFY_API: API CONFIGURATION
        Note left of NETLIFY_API: ‚îú‚îÄ‚îÄ Access Token (Personal/Team)
        Note left of NETLIFY_API: ‚îú‚îÄ‚îÄ API Base URL: api.netlify.com
        Note left of NETLIFY_API: ‚îú‚îÄ‚îÄ Rate Limits: 500 requests/min
        Note left of NETLIFY_API: ‚îú‚îÄ‚îÄ Authentication: Bearer token
        Note left of NETLIFY_API: ‚îî‚îÄ‚îÄ HTTPS only

        Note right of NETLIFY_API: CORE API ENDPOINTS
        Note right of NETLIFY_API: ‚îú‚îÄ‚îÄ Sites Management:
        Note right of NETLIFY_API: ‚îÇ   ‚îú‚îÄ‚îÄ POST /sites (—Å–æ–∑–¥–∞–Ω–∏–µ)
        Note right of NETLIFY_API: ‚îÇ   ‚îú‚îÄ‚îÄ GET /sites/{id} (–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è)
        Note right of NETLIFY_API: ‚îÇ   ‚îú‚îÄ‚îÄ PATCH /sites/{id} (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)
        Note right of NETLIFY_API: ‚îÇ   ‚îî‚îÄ‚îÄ DELETE /sites/{id} (—É–¥–∞–ª–µ–Ω–∏–µ)
        Note right of NETLIFY_API: ‚îú‚îÄ‚îÄ Deploy Management:
        Note right of NETLIFY_API: ‚îÇ   ‚îú‚îÄ‚îÄ POST /sites/{id}/deploys
        Note right of NETLIFY_API: ‚îÇ   ‚îú‚îÄ‚îÄ GET /deploys/{id}
        Note right of NETLIFY_API: ‚îÇ   ‚îî‚îÄ‚îÄ POST /deploys/{id}/restore
        Note right of NETLIFY_API: ‚îú‚îÄ‚îÄ Build Configuration:
        Note right of NETLIFY_API: ‚îÇ   ‚îú‚îÄ‚îÄ Build command setting
        Note right of NETLIFY_API: ‚îÇ   ‚îú‚îÄ‚îÄ Publish directory
        Note right of NETLIFY_API: ‚îÇ   ‚îî‚îÄ‚îÄ Environment variables
        Note right of NETLIFY_API: ‚îî‚îÄ‚îÄ Webhooks:
        Note right of NETLIFY_API:     ‚îú‚îÄ‚îÄ POST /hooks
        Note right of NETLIFY_API:     ‚îî‚îÄ‚îÄ Webhook event types

        alt –°–æ–∑–¥–∞–Ω–∏–µ Netlify —Å–∞–π—Ç–∞
            WS->>NETLIFY_API: POST /sites
            NETLIFY_API->>NETLIFY_SITE: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–∞–π—Ç–∞
            NETLIFY_SITE->>NETLIFY_SITE: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è subdomain
            NETLIFY_SITE->>NETLIFY_SITE: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub integration
            NETLIFY_API-->>WS: Site ID + URL + deploy settings
        end
        
        alt –ù–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
            WS->>NETLIFY_API: PATCH /sites/{id} —Å GitHub repo URL
            NETLIFY_API->>NETLIFY_SITE: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è GitHub —Å–≤—è–∑–∏
            NETLIFY_SITE->>GITHUB_API: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ deploy key
            NETLIFY_SITE->>GITHUB_API: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook
            NETLIFY_API-->>WS: Integration configured
        end
    end

    %% === NETLIFY BUILD PROCESS ===
    rect rgb(250, 255, 245)
        Note over BUILD: üèóÔ∏è NETLIFY BUILD PROCESS
        
        Note left of BUILD: BUILD CONFIGURATION
        Note left of BUILD: ‚îú‚îÄ‚îÄ Build Command: "pnpm install && pnpm build"
        Note left of BUILD: ‚îú‚îÄ‚îÄ Publish Directory: "dist/"
        Note left of BUILD: ‚îú‚îÄ‚îÄ Node.js Version: 18.x
        Note left of BUILD: ‚îú‚îÄ‚îÄ Package Manager: pnpm
        Note left of BUILD: ‚îú‚îÄ‚îÄ Build Timeout: 15 minutes
        Note left of BUILD: ‚îî‚îÄ‚îÄ Environment Variables

        Note right of BUILD: BUILD STEPS
        Note right of BUILD: ‚îú‚îÄ‚îÄ 1. Git clone –æ—Ç GitHub
        Note right of BUILD: ‚îú‚îÄ‚îÄ 2. Dependencies installation
        Note right of BUILD: ‚îú‚îÄ‚îÄ 3. Build script execution
        Note right of BUILD: ‚îú‚îÄ‚îÄ 4. Output validation
        Note right of BUILD: ‚îú‚îÄ‚îÄ 5. Asset optimization
        Note right of BUILD: ‚îú‚îÄ‚îÄ 6. CDN deployment
        Note right of BUILD: ‚îî‚îÄ‚îÄ 7. Cache invalidation

        Note over BUILD: BUILD ENVIRONMENT
        Note over BUILD: ‚îú‚îÄ‚îÄ Ubuntu-based container
        Note over BUILD: ‚îú‚îÄ‚îÄ Isolated build environment
        Note over BUILD: ‚îú‚îÄ‚îÄ Build caching (node_modules)
        Note over BUILD: ‚îú‚îÄ‚îÄ Asset processing pipeline
        Note over BUILD: ‚îî‚îÄ‚îÄ Deploy preview generation

        alt Successful build
            NETLIFY_SITE->>BUILD: Trigger build from GitHub push
            BUILD->>GITHUB_API: Git clone repository
            BUILD->>BUILD: pnpm install (dependencies)
            BUILD->>BUILD: pnpm build (compilation)
            BUILD->>BUILD: Asset optimization
            BUILD->>CDN: Deploy to edge locations
            BUILD->>WS: Webhook: deploy-succeeded
        end
        
        alt Failed build
            BUILD->>BUILD: Build error detected
            BUILD->>BUILD: Capture error logs
            BUILD->>WS: Webhook: deploy-failed
            BUILD->>BUILD: Cleanup build artifacts
        end
    end

    %% === NETLIFY WEBHOOKS ===
    rect rgb(245, 255, 245)
        Note over NETLIFY_API: üîî NETLIFY WEBHOOKS
        
        Note left of NETLIFY_API: WEBHOOK EVENTS
        Note left of NETLIFY_API: ‚îú‚îÄ‚îÄ deploy-building
        Note left of NETLIFY_API: ‚îú‚îÄ‚îÄ deploy-succeeded
        Note left of NETLIFY_API: ‚îú‚îÄ‚îÄ deploy-failed
        Note left of NETLIFY_API: ‚îú‚îÄ‚îÄ deploy-locked
        Note left of NETLIFY_API: ‚îú‚îÄ‚îÄ deploy-unlocked
        Note left of NETLIFY_API: ‚îî‚îÄ‚îÄ site-created

        Note right of NETLIFY_API: WEBHOOK PAYLOAD
        Note right of NETLIFY_API: ‚îú‚îÄ‚îÄ id (deploy ID)
        Note right of NETLIFY_API: ‚îú‚îÄ‚îÄ site_id (site identifier)
        Note right of NETLIFY_API: ‚îú‚îÄ‚îÄ state (building/ready/error)
        Note right of NETLIFY_API: ‚îú‚îÄ‚îÄ url (deploy URL)
        Note right of NETLIFY_API: ‚îú‚îÄ‚îÄ ssl_url (HTTPS URL)
        Note right of NETLIFY_API: ‚îú‚îÄ‚îÄ created_at (timestamp)
        Note right of NETLIFY_API: ‚îú‚îÄ‚îÄ error_message (–µ—Å–ª–∏ –µ—Å—Ç—å)
        Note right of NETLIFY_API: ‚îî‚îÄ‚îÄ build_log_url (—Å—Å—ã–ª–∫–∞ –Ω–∞ –ª–æ–≥–∏)

        alt Deploy webhook processing
            NETLIFY_SITE->>WS: POST /webhooks/netlify
            WS->>WS: Webhook signature verification
            WS->>WS: –ü–∞—Ä—Å–∏–Ω–≥ deploy payload
            WS->>WS: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ project deploy_status
            WS->>WS: Broadcast to WebSocket clients
        end
    end

    %% === CDN –ò EDGE DEPLOYMENT ===
    rect rgb(255, 255, 245)
        Note over CDN: üåç CDN –ò EDGE DEPLOYMENT
        
        Note left of CDN: NETLIFY CDN FEATURES
        Note left of CDN: ‚îú‚îÄ‚îÄ Global edge locations
        Note left of CDN: ‚îú‚îÄ‚îÄ Automatic asset optimization
        Note left of CDN: ‚îú‚îÄ‚îÄ Image processing
        Note left of CDN: ‚îú‚îÄ‚îÄ Gzip/Brotli compression
        Note left of CDN: ‚îú‚îÄ‚îÄ Cache invalidation
        Note left of CDN: ‚îú‚îÄ‚îÄ Custom headers
        Note left of CDN: ‚îî‚îÄ‚îÄ Edge functions support

        Note right of CDN: PERFORMANCE OPTIMIZATION
        Note right of CDN: ‚îú‚îÄ‚îÄ Static asset caching
        Note right of CDN: ‚îú‚îÄ‚îÄ HTTP/2 support
        Note right of CDN: ‚îú‚îÄ‚îÄ Progressive Web App features
        Note right of CDN: ‚îú‚îÄ‚îÄ Asset bundling optimization
        Note right of CDN: ‚îú‚îÄ‚îÄ Critical CSS inlining
        Note right of CDN: ‚îî‚îÄ‚îÄ Lazy loading implementation

        alt Asset deployment
            BUILD->>CDN: Upload optimized assets
            CDN->>CDN: Distribute to edge locations
            CDN->>CDN: Setup cache headers
            CDN->>CDN: Generate deploy URL
            CDN-->>BUILD: Deployment ready
        end
    end

    %% === ERROR HANDLING –ò MONITORING ===
    rect rgb(255, 245, 245)
        Note over WS: ‚ùå ERROR HANDLING –ò MONITORING
        
        Note left of WS: GITHUB API ERROR HANDLING
        Note left of WS: ‚îú‚îÄ‚îÄ Rate limit handling (5000 req/hour)
        Note left of WS: ‚îú‚îÄ‚îÄ API timeout handling (30s)
        Note left of WS: ‚îú‚îÄ‚îÄ Network retry logic (exponential backoff)
        Note left of WS: ‚îú‚îÄ‚îÄ Token expiration handling
        Note left of WS: ‚îú‚îÄ‚îÄ Repository access errors
        Note left of WS: ‚îî‚îÄ‚îÄ Webhook delivery failures

        Note right of WS: NETLIFY API ERROR HANDLING
        Note right of WS: ‚îú‚îÄ‚îÄ Build failure notifications
        Note right of WS: ‚îú‚îÄ‚îÄ Deploy timeout handling (15 min)
        Note right of WS: ‚îú‚îÄ‚îÄ Site limit monitoring
        Note right of WS: ‚îú‚îÄ‚îÄ Bandwidth usage tracking
        Note right of WS: ‚îú‚îÄ‚îÄ SSL certificate issues
        Note right of WS: ‚îî‚îÄ‚îÄ Custom domain configuration

        alt GitHub API rate limit
            WS->>GITHUB_API: API request
            GITHUB_API-->>WS: 403 Rate limit exceeded
            WS->>WS: Exponential backoff delay
            WS->>WS: Queue request for retry
            WS->>GITHUB_API: Retry after delay
        end
        
        alt Netlify build failure
            BUILD->>WS: deploy-failed webhook
            WS->>WS: Parse error details
            WS->>WS: Log error –¥–ª—è debugging
            WS->>WS: Notify user —á–µ—Ä–µ–∑ UI
            WS->>WS: Optionally retry deploy
        end
    end

    %% === SECURITY –ò BEST PRACTICES ===
    rect rgb(250, 250, 255)
        Note over WS: üîí SECURITY –ò BEST PRACTICES
        
        Note left of WS: GITHUB SECURITY
        Note left of WS: ‚îú‚îÄ‚îÄ Private key secure storage
        Note left of WS: ‚îú‚îÄ‚îÄ JWT token short lifetime (10 min)
        Note left of WS: ‚îú‚îÄ‚îÄ Installation token rotation
        Note left of WS: ‚îú‚îÄ‚îÄ Webhook signature verification
        Note left of WS: ‚îú‚îÄ‚îÄ Repository access auditing
        Note left of WS: ‚îî‚îÄ‚îÄ Least privilege –ø—Ä–∏–Ω—Ü–∏–ø

        Note right of WS: NETLIFY SECURITY
        Note right of WS: ‚îú‚îÄ‚îÄ Access token secure storage
        Note right of WS: ‚îú‚îÄ‚îÄ HTTPS enforcement
        Note right of WS: ‚îú‚îÄ‚îÄ Environment variable encryption
        Note right of WS: ‚îú‚îÄ‚îÄ Build log access control
        Note right of WS: ‚îú‚îÄ‚îÄ Deploy branch protection
        Note right of WS: ‚îî‚îÄ‚îÄ Custom domain SSL/TLS

        Note over WS: API COMMUNICATION SECURITY
        Note over WS: ‚îú‚îÄ‚îÄ HTTPS only –¥–ª—è –≤—Å–µ—Ö API calls
        Note over WS: ‚îú‚îÄ‚îÄ Request/response validation
        Note over WS: ‚îú‚îÄ‚îÄ API key rotation policies
        Note over WS: ‚îú‚îÄ‚îÄ Audit logging –¥–ª—è API usage
        Note over WS: ‚îî‚îÄ‚îÄ Error message sanitization

        alt Secure API communication
            WS->>WS: Encrypt sensitive data
            WS->>GITHUB_API: HTTPS API request
            GITHUB_API-->>WS: Secure response
            WS->>WS: Validate response integrity
            WS->>WS: Log API usage (sanitized)
        end
    end

    %% === INTEGRATION PATTERNS ===
    rect rgb(245, 245, 255)
        Note over WS: üîÑ INTEGRATION PATTERNS
        
        Note left of WS: REPOSITORY LIFECYCLE
        Note left of WS: ‚îú‚îÄ‚îÄ Create ‚Üí Initialize ‚Üí Upload template
        Note left of WS: ‚îú‚îÄ‚îÄ Update ‚Üí Commit changes ‚Üí Auto-deploy
        Note left of WS: ‚îú‚îÄ‚îÄ Backup ‚Üí Branch creation ‚Üí Archive
        Note left of WS: ‚îî‚îÄ‚îÄ Delete ‚Üí Cleanup ‚Üí Resource deallocation

        Note right of WS: DEPLOYMENT LIFECYCLE
        Note right of WS: ‚îú‚îÄ‚îÄ Site creation ‚Üí GitHub integration setup
        Note right of WS: ‚îú‚îÄ‚îÄ Build trigger ‚Üí Progress monitoring
        Note right of WS: ‚îú‚îÄ‚îÄ Deploy success ‚Üí URL generation
        Note right of WS: ‚îî‚îÄ‚îÄ Cleanup ‚Üí Site/domain deallocation

        Note over WS: ERROR RECOVERY PATTERNS
        Note over WS: ‚îú‚îÄ‚îÄ Retry mechanisms —Å exponential backoff
        Note over WS: ‚îú‚îÄ‚îÄ Fallback strategies –¥–ª—è service outages
        Note over WS: ‚îú‚îÄ‚îÄ Circuit breaker pattern –¥–ª—è API calls
        Note over WS: ‚îú‚îÄ‚îÄ Graceful degradation –ø—Ä–∏ partial failures
        Note over WS: ‚îî‚îÄ‚îÄ User notification –ø—Ä–∏ critical errors

        alt End-to-end project creation
            WS->>GITHUB_API: Create repository
            GITHUB_API-->>WS: Repository ready
            WS->>GITHUB_API: Upload template files
            GITHUB_API-->>WS: Files committed
            WS->>NETLIFY_API: Create site with GitHub link
            NETLIFY_API-->>WS: Site ready + auto-deploy configured
            WS->>WS: Project fully initialized
        end
    end