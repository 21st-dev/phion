"use client"

import { Spinner } from "@/components/geist/spinner"
import { useToast } from "@/hooks/use-toast"
import { useWebSocket } from "@/hooks/use-websocket"
import type { ProjectRow } from "@shipvibes/database"
import { useRouter } from "next/navigation"
import { useCallback, useEffect, useRef, useState } from "react"
// Material —É–¥–∞–ª–µ–Ω - –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
import {
  DownloadStep,
  ProjectSetupLayout,
  ProjectSetupSidebar,
  SetupStep,
  type SetupStep as ISetupStep,
} from "./index"

interface ProjectSetupProps {
  project: ProjectRow
  agentConnected?: boolean // –°—Ç–∞—Ç—É—Å –∞–≥–µ–Ω—Ç–∞ –ø–æ–ª—É—á–∞–µ–º –∏–∑–≤–Ω–µ
}

export function ProjectSetup({ project, agentConnected = false }: ProjectSetupProps) {
  const router = useRouter()
  const [currentStep, setCurrentStep] = useState(0)
  const [isDeploying, setIsDeploying] = useState(false)
  const [deploymentComplete, setDeploymentComplete] = useState(false)
  const [projectUrl, setProjectUrl] = useState<string | null>(null)
  const [isLoadingStatus, setIsLoadingStatus] = useState(true)
  const { error: showError, success: showSuccess } = useToast()

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞
  const [downloadCompleted, setDownloadCompleted] = useState(false)
  const [setupCompleted, setSetupCompleted] = useState(false)

  // –†–µ—Ñ—ã –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ —Å–∫—Ä–æ–ª–ª–∞
  const downloadStepRef = useRef<HTMLDivElement>(null)
  const setupStepRef = useRef<HTMLDivElement>(null)

  const [steps, setSteps] = useState<ISetupStep[]>([
    { id: "download", title: "Project Initialization", status: "READY" },
    { id: "setup", title: "Open in Cursor", status: "QUEUED" },
  ])

  // WebSocket –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
  const { isConnected } = useWebSocket({
    projectId: project.id,
    onDeployStatusUpdate: (data) => {
      console.log("üöÄ [ProjectSetup] Deploy status update:", data)
      if (data.projectId === project.id) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —à–∞–≥–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ WebSocket —Å–æ–±—ã—Ç–∏–π
        if (data.status === "pending") {
          // –ü—Ä–æ–µ–∫—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è
          setSteps((prev) =>
            prev.map((step) => (step.id === "download" ? { ...step, status: "BUILDING" } : step)),
          )
        } else if (data.status === "ready" && !data.url) {
          // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ø—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é
          setSteps((prev) =>
            prev.map((step) => (step.id === "download" ? { ...step, status: "READY" } : step)),
          )
        } else if (data.status === "building") {
          // –î–µ–ø–ª–æ–π –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ - —Ñ–æ–Ω–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
          setIsDeploying(true)
        } else if (data.status === "ready" && data.url) {
          // –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ
          setIsDeploying(false)
          setDeploymentComplete(true)
          setProjectUrl(data.url)
        } else if (data.status === "failed") {
          // –î–µ–ø–ª–æ–π –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è
          setIsDeploying(false)
        }
      }
    },
    onFileTracked: () => {
      // –ö–æ–≥–¥–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π —Ñ–∞–π–ª
      console.log("üìù [ProjectSetup] File tracked")
    },
    onSaveSuccess: () => {
      // –ö–æ–≥–¥–∞ —Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã
      console.log("üíæ [ProjectSetup] Save success")
    },
  })

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    const checkProjectStatus = async () => {
      try {
        const response = await fetch(`/api/projects/${project.id}/status`)
        if (response.ok) {
          const statusData = await response.json()

          // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –¥–µ–ø–ª–æ—è –∏ –Ω–∞–ª–∏—á–∏–µ Netlify URL
          if (statusData.deploy_status === "ready" && statusData.netlify_url) {
            // –ü—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–¥–µ–ø–ª–æ–µ–Ω - —Ñ–æ–Ω–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
            setDeploymentComplete(true)
            setProjectUrl(statusData.netlify_url)
          }
          // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å ready –Ω–æ –Ω–µ—Ç netlify_url - –ø—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é
          else if (statusData.deploy_status === "ready" && !statusData.netlify_url) {
            // –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é - —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π —à–∞–≥
            setSteps((prev) =>
              prev.map((step) => (step.id === "download" ? { ...step, status: "READY" } : step)),
            )
          }
          // –ï—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –¥–µ–ø–ª–æ—è
          else if (statusData.deploy_status === "building") {
            setIsDeploying(true)
          }
          // –ï—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è (–∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è —Ñ–∞–π–ª—ã —à–∞–±–ª–æ–Ω–∞)
          else if (statusData.deploy_status === "pending") {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –ø—Ä–æ–µ–∫—Ç –µ—â–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è
            setSteps((prev) =>
              prev.map((step) => (step.id === "download" ? { ...step, status: "BUILDING" } : step)),
            )
          }

          // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–æ–π —à–∞–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º
          if (!downloadCompleted) {
            setCurrentStep(0) // –ü–µ—Ä–≤—ã–π —à–∞–≥ - —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
          } else if (!setupCompleted) {
            setCurrentStep(1) // –í—Ç–æ—Ä–æ–π —à–∞–≥ - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
          }
        }
      } catch (error) {
        console.error("Error checking project status:", error)
      } finally {
        setIsLoadingStatus(false)
      }
    }

    checkProjectStatus()
  }, [project.id])

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  const handleInitializationComplete = useCallback(() => {
    console.log("‚úÖ [ProjectSetup] Initialization completed")
    setSteps((prev) =>
      prev.map((step) => (step.id === "download" ? { ...step, status: "READY" } : step)),
    )
  }, [])

  // –§—É–Ω–∫—Ü–∏—è –ø–ª–∞–≤–Ω–æ–≥–æ —Å–∫—Ä–æ–ª–ª–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
  const scrollToStep = (stepIndex: number) => {
    const refs = [downloadStepRef, setupStepRef]
    const targetRef = refs[stepIndex]

    if (targetRef.current) {
      setTimeout(() => {
        targetRef.current?.scrollIntoView({
          behavior: "smooth",
          block: "center",
        })
      }, 500) // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã UI —É—Å–ø–µ–ª –æ–±–Ω–æ–≤–∏—Ç—å—Å—è
    }
  }

  const handleDownload = async () => {
    try {
      // –û—Ç–º–µ—á–∞–µ–º –ø–µ—Ä–≤—ã–π —à–∞–≥ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π
      setDownloadCompleted(true)
      showSuccess(
        "Project ready",
        "Run the commands below to download and set up your project locally",
      )

      // Update steps
      setSteps((prev) =>
        prev.map((step) =>
          step.id === "download"
            ? { ...step, status: "READY" }
            : step.id === "setup"
              ? { ...step, status: "READY" }
              : step,
        ),
      )
      setCurrentStep(1)

      // –°–∫—Ä–æ–ª–ª–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
      scrollToStep(1)
    } catch (error) {
      console.error("Error in download step:", error)
      setSteps((prev) =>
        prev.map((step) => (step.id === "download" ? { ...step, status: "ERROR" } : step)),
      )
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      showError("Project initialization failed", "Please try again")
    }
  }

  const handleSetupComplete = () => {
    setSetupCompleted(true)
    setSteps((prev) =>
      prev.map((step) => (step.id === "setup" ? { ...step, status: "READY" } : step)),
    )

    // –†–µ–¥–∏—Ä–µ–∫—Ç–∏–º –Ω–∞ overview –ø–æ –∫–Ω–æ–ø–∫–µ
    console.log("‚úÖ [ProjectSetup] Setup completed, redirecting to overview...")
    router.push(`/project/${project.id}/overview`)
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —à–∞–≥—É
  const handleStepClick = (stepIndex: number) => {
    // –ú–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ª—é–±–æ–º—É –¥–æ—Å—Ç—É–ø–Ω–æ–º—É —à–∞–≥—É
    const canGoToStep =
      stepIndex === 0 || // –í—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–µ—Ä–≤–æ–º—É —à–∞–≥—É
      (stepIndex === 1 && downloadCompleted) || // –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –∫–æ –≤—Ç–æ—Ä–æ–º—É —à–∞–≥—É –µ—Å–ª–∏ –ø–µ—Ä–≤—ã–π –∑–∞–≤–µ—Ä—à–µ–Ω
      stepIndex === currentStep // –ú–æ–∂–Ω–æ –æ—Å—Ç–∞—Ç—å—Å—è –Ω–∞ —Ç–µ–∫—É—â–µ–º —à–∞–≥–µ

    if (canGoToStep) {
      setCurrentStep(stepIndex)
      scrollToStep(stepIndex)
    }
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–æ–∫–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
  if (isLoadingStatus) {
    return (
      <div className="fixed inset-0 bg-background flex items-center justify-center z-50">
        <div className="flex flex-col items-center justify-center text-center">
          <Spinner size={32} />
          <p className="mt-4 text-sm text-muted-foreground">Checking project status...</p>
        </div>
      </div>
    )
  }

  // –£–±–∏—Ä–∞–µ–º –ø–æ–∫–∞–∑ congratulations page —Ç–∞–∫ –∫–∞–∫ deploy step –±–æ–ª—å—à–µ –Ω–µ—Ç –≤ UI
  // –†–µ–¥–∏—Ä–µ–∫—Ç –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ onboarding/page.tsx –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∞–≥–µ–Ω—Ç–∞

  return (
    <ProjectSetupLayout>
      <div className="grid grid-cols-1 lg:grid-cols-4 gap-8">
        <div className="lg:col-span-1 lg:sticky lg:top-8 lg:self-start">
          <ProjectSetupSidebar
            steps={steps}
            currentStep={currentStep}
            project={project}
            downloadCompleted={downloadCompleted}
            setupCompleted={setupCompleted}
            deployCompleted={false} // –í—Å–µ–≥–¥–∞ false —Ç–∞–∫ –∫–∞–∫ deploy step —É–±—Ä–∞–Ω
            onStepClick={handleStepClick}
          />
        </div>

        {/* Main Content */}
        <div className="lg:col-span-3 space-y-6 p-6 pb-[70vh]">
          {/* Steps Content */}
          <div className="space-y-6">
            <div
              ref={downloadStepRef}
              className={`transition-opacity ${
                currentStep === 0
                  ? "" // –¢–µ–∫—É—â–∏–π —à–∞–≥ - —è—Ä–∫–∏–π
                  : downloadCompleted
                    ? "opacity-70" // –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π —à–∞–≥ - —Å–ª–µ–≥–∫–∞ –∑–∞—Ç–µ–º–Ω–µ–Ω –Ω–æ –∫–ª–∏–∫–∞–±–µ–ª–µ–Ω
                    : "opacity-50 pointer-events-none" // –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π —à–∞–≥ - –∑–∞—Ç–µ–º–Ω–µ–Ω –∏ –Ω–µ–∫–ª–∏–∫–∞–±–µ–ª–µ–Ω
              }`}
            >
              <DownloadStep
                project={project}
                projectId={project.id}
                onDownload={handleDownload}
                isCompleted={downloadCompleted}
                onInitializationComplete={handleInitializationComplete}
              />
            </div>

            <div
              ref={setupStepRef}
              className={`transition-opacity ${
                currentStep === 1
                  ? "" // –¢–µ–∫—É—â–∏–π —à–∞–≥ - —è—Ä–∫–∏–π
                  : setupCompleted
                    ? "opacity-70" // –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π —à–∞–≥ - —Å–ª–µ–≥–∫–∞ –∑–∞—Ç–µ–º–Ω–µ–Ω –Ω–æ –∫–ª–∏–∫–∞–±–µ–ª–µ–Ω
                    : currentStep > 1 || !downloadCompleted
                      ? "opacity-50 pointer-events-none" // –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π —à–∞–≥ - –∑–∞—Ç–µ–º–Ω–µ–Ω –∏ –Ω–µ–∫–ª–∏–∫–∞–±–µ–ª–µ–Ω
                      : "opacity-50 pointer-events-none"
              }`}
            >
              <SetupStep
                onDeploy={handleSetupComplete}
                projectId={project.id}
                agentConnected={agentConnected}
              />
            </div>
          </div>
        </div>
      </div>
    </ProjectSetupLayout>
  )
}
